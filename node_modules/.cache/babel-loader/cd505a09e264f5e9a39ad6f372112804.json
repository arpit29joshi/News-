{"ast":null,"code":"function useFetchData(type) {\n  async function fetchData() {\n    const response = await fetch(`https://api.nytimes.com/svc/topstories/v2/${type}.json?api-key=9fw5bZorW3brppppfa95DpFlAAKfIQkE`);\n\n    if (!response.ok) {\n      setLoading(false);\n      return;\n    }\n\n    const responseData = await response.json();\n    const resultList = await responseData.results;\n    setData(resultList);\n  } // useEffect(() => {\n  //   fetchData();\n  // }, [fetchData]);\n\n} // import { useEffect,useState } from \"react\";\n// import React from \"react\";\n// export const HttpContext = React.createContext({\n//   data: [],\n//   getData: (type) => {},\n//   isLoading: true,\n// });\n// function HttpProvider(props) {\n//   const [data, setData] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   async function fetchData(type) {\n//     const response = await fetch(\n//       `https://api.nytimes.com/svc/topstories/v2/${type}.json?api-key=9fw5bZorW3brppppfa95DpFlAAKfIQkE`\n//     );\n//     if (!response.ok) {\n//         setLoading(false);\n//       return;\n//     }\n//     const responseData = await response.json();\n//     const resultList = await responseData.results;\n//     setData(resultList);\n//     setLoading(false);\n//   }\n//   useEffect(() => {\n//     fetchData();\n//   }, [fetchData]);\n//   return <HttpContext.Provider value={{\n//       getData:fetchData,\n//       data:data,\n//       isLoading:loading,\n//   }}>{props.children}</HttpContext.Provider>;\n// }\n// export default HttpProvider;","map":{"version":3,"sources":["/home/arpit/Downloads/09-time-to-practice-starting-code/09-time-to-practice-starting-code/src/Http/GetData.js"],"names":["useFetchData","type","fetchData","response","fetch","ok","setLoading","responseData","json","resultList","results","setData"],"mappings":"AAAA,SAASA,YAAT,CAAsBC,IAAtB,EAA2B;AACzB,iBAAeC,SAAf,GAA2B;AACzB,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CACzB,6CAA4CH,IAAK,gDADxB,CAA5B;;AAGA,QAAI,CAACE,QAAQ,CAACE,EAAd,EAAkB;AACdC,MAAAA,UAAU,CAAC,KAAD,CAAV;AACF;AACD;;AACD,UAAMC,YAAY,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAA3B;AACA,UAAMC,UAAU,GAAG,MAAMF,YAAY,CAACG,OAAtC;AACAC,IAAAA,OAAO,CAACF,UAAD,CAAP;AACD,GAZwB,CAazB;AACA;AACA;;AAED,C,CAkBD;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["function useFetchData(type){\n  async function fetchData() {\n    const response = await fetch(\n      `https://api.nytimes.com/svc/topstories/v2/${type}.json?api-key=9fw5bZorW3brppppfa95DpFlAAKfIQkE`\n    );\n    if (!response.ok) {\n        setLoading(false);\n      return;\n    }\n    const responseData = await response.json();\n    const resultList = await responseData.results;\n    setData(resultList);\n  }\n  // useEffect(() => {\n  //   fetchData();\n  // }, [fetchData]);\n\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import { useEffect,useState } from \"react\";\n// import React from \"react\";\n// export const HttpContext = React.createContext({\n//   data: [],\n//   getData: (type) => {},\n//   isLoading: true,\n// });\n\n// function HttpProvider(props) {\n//   const [data, setData] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   async function fetchData(type) {\n//     const response = await fetch(\n//       `https://api.nytimes.com/svc/topstories/v2/${type}.json?api-key=9fw5bZorW3brppppfa95DpFlAAKfIQkE`\n//     );\n//     if (!response.ok) {\n//         setLoading(false);\n//       return;\n//     }\n//     const responseData = await response.json();\n//     const resultList = await responseData.results;\n//     setData(resultList);\n//     setLoading(false);\n//   }\n//   useEffect(() => {\n//     fetchData();\n//   }, [fetchData]);\n\n//   return <HttpContext.Provider value={{\n//       getData:fetchData,\n//       data:data,\n//       isLoading:loading,\n//   }}>{props.children}</HttpContext.Provider>;\n// }\n\n// export default HttpProvider;\n"]},"metadata":{},"sourceType":"module"}