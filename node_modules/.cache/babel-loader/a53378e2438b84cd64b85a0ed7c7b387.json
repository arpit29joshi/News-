{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\n\nfunction useFetchData(type) {\n  _s();\n\n  const [initalData, setData] = useState({});\n\n  async function fetchData() {\n    const response = await fetch(`https://api.nytimes.com/svc/topstories/v2/${type}.json?api-key=9fw5bZorW3brppppfa95DpFlAAKfIQkE`);\n\n    if (!response.ok) {\n      return;\n    }\n\n    const responseData = await response.json();\n    const resultList = await responseData.results;\n    setData(resultList);\n  }\n\n  useEffect(() => {\n    fetchData();\n  }, [fetchData]);\n  return {\n    initalData\n  };\n}\n\n_s(useFetchData, \"5aNEFbf7f5Numm0mIgc4kNuq0lQ=\");\n\nexport default useFetchData; // import { useEffect,useState } from \"react\";\n// import React from \"react\";\n// export const HttpContext = React.createContext({\n//   data: [],\n//   getData: (type) => {},\n//   isLoading: true,\n// });\n// function HttpProvider(props) {\n//   const [data, setData] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   async function fetchData(type) {\n//     const response = await fetch(\n//       `https://api.nytimes.com/svc/topstories/v2/${type}.json?api-key=9fw5bZorW3brppppfa95DpFlAAKfIQkE`\n//     );\n//     if (!response.ok) {\n//         setLoading(false);\n//       return;\n//     }\n//     const responseData = await response.json();\n//     const resultList = await responseData.results;\n//     setData(resultList);\n//     setLoading(false);\n//   }\n//   useEffect(() => {\n//     fetchData();\n//   }, [fetchData]);\n//   return <HttpContext.Provider value={{\n//       getData:fetchData,\n//       data:data,\n//       isLoading:loading,\n//   }}>{props.children}</HttpContext.Provider>;\n// }\n// export default HttpProvider;","map":{"version":3,"sources":["/home/arpit/Downloads/09-time-to-practice-starting-code/09-time-to-practice-starting-code/src/Http/GetData.js"],"names":["useEffect","useState","useFetchData","type","initalData","setData","fetchData","response","fetch","ok","responseData","json","resultList","results"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,QAAT,QAAyB,OAAzB;;AACA,SAASC,YAAT,CAAsBC,IAAtB,EAA2B;AAAA;;AACzB,QAAO,CAACC,UAAD,EAAYC,OAAZ,IAAqBJ,QAAQ,CAAC,EAAD,CAApC;;AACA,iBAAeK,SAAf,GAA2B;AACzB,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CACzB,6CAA4CL,IAAK,gDADxB,CAA5B;;AAGA,QAAI,CAACI,QAAQ,CAACE,EAAd,EAAkB;AAChB;AACD;;AACD,UAAMC,YAAY,GAAG,MAAMH,QAAQ,CAACI,IAAT,EAA3B;AACA,UAAMC,UAAU,GAAG,MAAMF,YAAY,CAACG,OAAtC;AACAR,IAAAA,OAAO,CAACO,UAAD,CAAP;AACD;;AACDZ,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,SAAS;AACV,GAFQ,EAEN,CAACA,SAAD,CAFM,CAAT;AAGA,SAAO;AAACF,IAAAA;AAAD,GAAP;AAED;;GAlBQF,Y;;AAmBT,eAAeA,YAAf,C,CAkBA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import { useEffect } from \"react\";\nimport { useState } from \"react\";\nfunction useFetchData(type){\n  const  [initalData,setData]=useState({});\n  async function fetchData() {\n    const response = await fetch(\n      `https://api.nytimes.com/svc/topstories/v2/${type}.json?api-key=9fw5bZorW3brppppfa95DpFlAAKfIQkE`\n    );\n    if (!response.ok) {\n      return;\n    }\n    const responseData = await response.json();\n    const resultList = await responseData.results;\n    setData(resultList);\n  }\n  useEffect(() => {\n    fetchData();\n  }, [fetchData]);\n  return {initalData};\n\n}\nexport default useFetchData;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import { useEffect,useState } from \"react\";\n// import React from \"react\";\n// export const HttpContext = React.createContext({\n//   data: [],\n//   getData: (type) => {},\n//   isLoading: true,\n// });\n\n// function HttpProvider(props) {\n//   const [data, setData] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   async function fetchData(type) {\n//     const response = await fetch(\n//       `https://api.nytimes.com/svc/topstories/v2/${type}.json?api-key=9fw5bZorW3brppppfa95DpFlAAKfIQkE`\n//     );\n//     if (!response.ok) {\n//         setLoading(false);\n//       return;\n//     }\n//     const responseData = await response.json();\n//     const resultList = await responseData.results;\n//     setData(resultList);\n//     setLoading(false);\n//   }\n//   useEffect(() => {\n//     fetchData();\n//   }, [fetchData]);\n\n//   return <HttpContext.Provider value={{\n//       getData:fetchData,\n//       data:data,\n//       isLoading:loading,\n//   }}>{props.children}</HttpContext.Provider>;\n// }\n\n// export default HttpProvider;\n"]},"metadata":{},"sourceType":"module"}